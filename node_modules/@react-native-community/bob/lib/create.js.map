{"version":3,"sources":["../src/create.ts"],"names":["BINARIES","COMMON_FILES","path","resolve","__dirname","NATIVE_FILES","JS_FILES","EXPO_FILES","CPP_FILES","OBJC_FILES","SWIFT_FILES","args","description","type","choices","create","argv","folder","join","process","cwd","name","fs","pathExists","console","log","chalk","blue","exit","email","spawn","sync","stdout","toString","trim","e","basename","questions","message","default","validForNewPackages","test","undefined","validate","input","Boolean","answers","username","authorEmail","authorUrl","slug","replace","value","authorName","repoUrl","inquirer","prompt","Object","entries","map","key","_","char","toUpperCase","when","project","options","bob","version","pack","charAt","$1","slice","package","toLowerCase","podspec","native","cpp","swift","module","author","url","repo","copyDir","source","dest","mkdirp","files","readdir","f","target","ejs","render","openDelimiter","closeDelimiter","file","stats","stat","isDirectory","match","content","readFile","writeFile","copyFile","platforms","ios","color","android","web","script"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport ejs from 'ejs';\nimport dedent from 'dedent';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport type yargs from 'yargs';\nimport spawn from 'cross-spawn';\nimport validateNpmPackage from 'validate-npm-package-name';\nimport githubUsername from 'github-username';\nimport pack from '../package.json';\n\nconst BINARIES = /(gradlew|\\.(jar|keystore|png|jpg|gif))$/;\n\nconst COMMON_FILES = path.resolve(__dirname, '../templates/common');\nconst NATIVE_FILES = path.resolve(__dirname, '../templates/native-library');\nconst JS_FILES = path.resolve(__dirname, '../templates/js-library');\nconst EXPO_FILES = path.resolve(__dirname, '../templates/expo-library');\nconst CPP_FILES = path.resolve(__dirname, '../templates/cpp-library');\nconst OBJC_FILES = path.resolve(__dirname, '../templates/objc-library');\nconst SWIFT_FILES = path.resolve(__dirname, '../templates/swift-library');\n\ntype ArgName =\n  | 'slug'\n  | 'description'\n  | 'author-name'\n  | 'author-email'\n  | 'author-url'\n  | 'repo-url'\n  | 'type';\n\ntype Answers = {\n  slug: string;\n  description: string;\n  authorName: string;\n  authorEmail: string;\n  authorUrl: string;\n  repoUrl: string;\n  type: 'native' | 'native-swift' | 'js' | 'cpp' | 'expo';\n};\n\nexport const args: Record<ArgName, yargs.Options> = {\n  'slug': {\n    description: 'Name of the npm package',\n    type: 'string',\n  },\n  'description': {\n    description: 'Description of the npm package',\n    type: 'string',\n  },\n  'author-name': {\n    description: 'Name of the package author',\n    type: 'string',\n  },\n  'author-email': {\n    description: 'Email address of the package author',\n    type: 'string',\n  },\n  'author-url': {\n    description: 'URL for the package author',\n    type: 'string',\n  },\n  'repo-url': {\n    description: 'URL for the repository',\n    type: 'string',\n  },\n  'type': {\n    description: 'Type package do you want to develop',\n    choices: ['native', 'native-swift', 'js', 'cpp', 'expo'],\n  },\n};\n\nexport default async function create(argv: yargs.Arguments<any>) {\n  const folder = path.join(process.cwd(), argv.name);\n\n  if (await fs.pathExists(folder)) {\n    console.log(\n      `A folder already exists at ${chalk.blue(\n        folder\n      )}! Please specify another folder name or delete the existing one.`\n    );\n\n    process.exit(1);\n  }\n\n  let name, email;\n\n  try {\n    name = spawn\n      .sync('git', ['config', '--get', 'user.name'])\n      .stdout.toString()\n      .trim();\n\n    email = spawn\n      .sync('git', ['config', '--get', 'user.email'])\n      .stdout.toString()\n      .trim();\n  } catch (e) {\n    // Ignore error\n  }\n\n  const basename = path.basename(argv.name);\n\n  const questions: Record<ArgName, inquirer.Question> = {\n    'slug': {\n      type: 'input',\n      message: 'What is the name of the npm package?',\n      default: validateNpmPackage(basename).validForNewPackages\n        ? /^(@|react-native)/.test(basename)\n          ? basename\n          : `react-native-${basename}`\n        : undefined,\n      validate: (input) =>\n        validateNpmPackage(input).validForNewPackages ||\n        'Must be a valid npm package name',\n    },\n    'description': {\n      type: 'input',\n      message: 'What is the description for the package?',\n      validate: (input) => Boolean(input),\n    },\n    'author-name': {\n      type: 'input',\n      message: 'What is the name of package author?',\n      default: name,\n      validate: (input) => Boolean(input),\n    },\n    'author-email': {\n      type: 'input',\n      message: 'What is the email address for the package author?',\n      default: email,\n      validate: (input) =>\n        /^\\S+@\\S+$/.test(input) || 'Must be a valid email address',\n    },\n    'author-url': {\n      type: 'input',\n      message: 'What is the URL for the package author?',\n      default: async (answers: any) => {\n        try {\n          const username = await githubUsername(answers.authorEmail);\n\n          return `https://github.com/${username}`;\n        } catch (e) {\n          // Ignore error\n        }\n\n        return undefined;\n      },\n      validate: (input) => /^https?:\\/\\//.test(input) || 'Must be a valid URL',\n    },\n    'repo-url': {\n      type: 'input',\n      message: 'What is the URL for the repository?',\n      default: (answers: any) => {\n        if (/^https?:\\/\\/github.com\\/[^/]+/.test(answers.authorUrl)) {\n          return `${answers.authorUrl}/${answers.slug\n            .replace(/^@/, '')\n            .replace(/\\//g, '-')}`;\n        }\n\n        return undefined;\n      },\n      validate: (input) => /^https?:\\/\\//.test(input) || 'Must be a valid URL',\n    },\n    'type': {\n      type: 'list',\n      message: 'What type of package do you want to develop?',\n      // @ts-ignore - seems types are wrong for inquirer\n      choices: [\n        { name: 'Native module in Kotlin and Objective-C', value: 'native' },\n        { name: 'Native module in Kotlin and Swift', value: 'native-swift' },\n        { name: 'Native module with C++ code', value: 'cpp' },\n        {\n          name: 'JavaScript module with native example',\n          value: 'js',\n        },\n        {\n          name: 'JavaScript module with Expo example and Web support',\n          value: 'expo',\n        },\n      ],\n      default: 'native',\n    },\n  };\n\n  const {\n    slug,\n    description,\n    authorName,\n    authorEmail,\n    authorUrl,\n    repoUrl,\n    type,\n  } = {\n    ...argv,\n    ...(await inquirer.prompt(\n      Object.entries(questions).map(([key, value]) => ({\n        ...value,\n        name: key.replace(/\\b-([a-z])/g, (_, char) => char.toUpperCase()),\n        when: !(argv[key] && value.validate\n          ? value.validate(argv[key]) === true\n          : Boolean(argv[key])),\n        default:\n          typeof value.default === 'function'\n            ? (answers: Partial<Answers>) =>\n                value.default({ ...argv, ...answers })\n            : value.default,\n      }))\n    )),\n  } as Answers;\n\n  const project = slug.replace(/^(react-native-|@[^/]+\\/)/, '');\n\n  const options = {\n    bob: {\n      version: pack.version,\n    },\n    project: {\n      slug,\n      description,\n      name: `${project\n        .charAt(0)\n        .toUpperCase()}${project\n        .replace(/[^a-z0-9](\\w)/g, (_, $1) => $1.toUpperCase())\n        .slice(1)}`,\n      package: slug.replace(/[^a-z0-9]/g, '').toLowerCase(),\n      podspec: slug.replace(/[^a-z0-9]+/g, '-').replace(/^-/, ''),\n      native: type === 'native' || type === 'cpp' || 'native-swift',\n      cpp: type === 'cpp',\n      swift: type === 'native-swift',\n      module: type !== 'js',\n    },\n    author: {\n      name: authorName,\n      email: authorEmail,\n      url: authorUrl,\n    },\n    repo: repoUrl,\n  };\n\n  const copyDir = async (source: string, dest: string) => {\n    await fs.mkdirp(dest);\n\n    const files = await fs.readdir(source);\n\n    for (const f of files) {\n      const target = path.join(\n        dest,\n        ejs.render(f.replace(/^\\$/, ''), options, {\n          openDelimiter: '{',\n          closeDelimiter: '}',\n        })\n      );\n\n      const file = path.join(source, f);\n      const stats = await fs.stat(file);\n\n      if (stats.isDirectory()) {\n        await copyDir(file, target);\n      } else if (!file.match(BINARIES)) {\n        const content = await fs.readFile(file, 'utf8');\n\n        await fs.writeFile(target, ejs.render(content, options));\n      } else {\n        await fs.copyFile(file, target);\n      }\n    }\n  };\n\n  await copyDir(COMMON_FILES, folder);\n\n  if (type === 'expo') {\n    await copyDir(JS_FILES, folder);\n    await copyDir(EXPO_FILES, folder);\n  } else if (type === 'js') {\n    await copyDir(JS_FILES, folder);\n    await copyDir(\n      path.join(NATIVE_FILES, 'example'),\n      path.join(folder, 'example')\n    );\n  } else {\n    await copyDir(NATIVE_FILES, folder);\n\n    if (type === 'cpp') {\n      await copyDir(CPP_FILES, folder);\n    } else if (type === 'native-swift') {\n      await copyDir(SWIFT_FILES, folder);\n    } else {\n      await copyDir(OBJC_FILES, folder);\n    }\n  }\n\n  try {\n    spawn.sync('git', ['init'], { cwd: folder });\n    spawn.sync('git', ['add', '.'], { cwd: folder });\n    spawn.sync('git', ['commit', '-m', 'chore: initial commit'], {\n      cwd: folder,\n    });\n  } catch (e) {\n    // Ignore error\n  }\n\n  const platforms = {\n    ios: { name: 'iOS', color: 'cyan' },\n    android: { name: 'Android', color: 'green' },\n    ...(type === 'expo' ? { web: { name: 'Web', color: 'blue' } } : null),\n  };\n\n  console.log(\n    dedent(chalk`\n      Project created successfully at {yellow ${argv.name}}!\n\n      {magenta {bold Get started} with the project}{gray :}\n\n        {gray $} yarn bootstrap\n      ${Object.entries(platforms)\n        .map(\n          ([script, { name, color }]) => chalk`\n      {${color} Run the example app on {bold ${name}}}{gray :}\n\n        {gray $} yarn example ${script}`\n        )\n        .join('\\n')}\n\n      {yellow Good luck!}\n    `)\n  );\n}\n"],"file":"create.js"}