{"version":3,"sources":["../../src/targets/aar.ts"],"names":["defaultOptions","androidPath","androidBundleName","reverseJetify","createGradleFile","file","fs","createFile","writeFile","build","root","output","options","report","targetOptions","info","chalk","blue","path","relative","mkdir","sourceAar","join","targetAar","copyFile","gradleFile","supportOutputPath","supportAar","input","reverse","supportGradleFile","success"],"mappings":"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","sourcesContent":["import path from 'path';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport del from 'del';\nimport androidAssemble from '../utils/androidAssemble';\nimport jetifier from '../utils/jetifier';\nimport type { Input } from '../types';\n\ntype TargetOptions = {\n  androidPath: string;\n  androidBundleName: string;\n  reverseJetify: boolean;\n};\n\nconst defaultOptions: TargetOptions = {\n  androidPath: 'android',\n  androidBundleName: 'android.aar',\n  reverseJetify: false,\n};\n\ntype Options = Input & {\n  options?: Partial<TargetOptions>;\n};\n\nasync function createGradleFile(file: string) {\n  await fs.createFile(file);\n  await fs.writeFile(\n    file,\n    'configurations.maybeCreate(\"default\")\\nartifacts.add(\"default\", file(\\'android.aar\\'))'\n  );\n}\n\nexport default async function build({\n  root,\n  output,\n  options,\n  report,\n}: Options) {\n  const targetOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  report.info(\n    `Cleaning up previous build at ${chalk.blue(path.relative(root, output))}`\n  );\n\n  await del([output]);\n\n  await androidAssemble({\n    root,\n    androidPath: targetOptions.androidPath,\n    report,\n  });\n\n  report.info(\n    `Creating new output directory at ${chalk.blue(\n      path.relative(root, output)\n    )}`\n  );\n  await fs.mkdir(output);\n\n  const sourceAar = path.join(\n    targetOptions.androidPath,\n    'build',\n    'outputs',\n    'aar',\n    targetOptions.androidBundleName\n  );\n  const targetAar = path.join(output, targetOptions.androidBundleName);\n\n  report.info(\n    `Copying AAR from ${chalk.blue(\n      path.relative(root, sourceAar)\n    )} to ${chalk.blue(path.relative(root, targetAar))}`\n  );\n  await fs.copyFile(sourceAar, targetAar);\n\n  const gradleFile = path.join(output, 'build.gradle');\n  report.info(\n    `Creating AAR Gradle file at ${chalk.blue(path.relative(root, gradleFile))}`\n  );\n  await createGradleFile(gradleFile);\n\n  if (targetOptions.reverseJetify) {\n    const supportOutputPath = path.join(output, 'support');\n    report.info(\n      `Creating new support output directory at ${chalk.blue(\n        path.relative(root, supportOutputPath)\n      )}`\n    );\n    await fs.mkdir(supportOutputPath);\n\n    const supportAar = path.join(\n      supportOutputPath,\n      targetOptions.androidBundleName\n    );\n    report.info(\n      `Using Jetifier to convert AAR from AndroidX to Support AAR at ${chalk.blue(\n        path.relative(root, supportAar)\n      )}`\n    );\n\n    await jetifier({\n      root,\n      report,\n      input: targetAar,\n      output: supportAar,\n      reverse: true,\n    });\n\n    const supportGradleFile = path.join(supportOutputPath, 'build.gradle');\n    report.info(\n      `Creating Support AAR Gradle file at ${chalk.blue(\n        path.relative(root, supportGradleFile)\n      )}`\n    );\n    await createGradleFile(supportGradleFile);\n  }\n\n  report.success(`Wrote files to ${chalk.blue(path.relative(root, output))}`);\n}\n"],"file":"aar.js"}